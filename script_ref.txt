say(v1) -> v1에 해당하는 말을 합니다.

dofile(v1) -> 다른 스크립트를 추가할 수 있습니다.

pc_x() -> 자신의 X 좌표를 반환합니다.

pc_y() -> 자신의 Y 좌표를 반환합니다.

do_command(v1) -> 커맨드를 실행합니다.

showtext(v1,v2) -> 화면에 메시지를 출력해줍니다. 
/* v2 컬러
	0(0x00): 귓말
	2,3(0x03): 상태창
	4(0x04): 빨간색공지
	5(0x05): 사자후,세계후
	8(0x08): 메시지박스
	11(0x0B): 그룹말 (회색)
	12(0x0C): 문파말 (녹색)
	18(0x12): 고급사자후비서(쓸려면 set_message2를 이용)
	19(0x13): 연두색
	20(0x14): 캐시샵
	21(0x15): 가운대 막대 메시지
	22(0x16): 연대기 박스 메시지
	23(0x17): 친구귓말
*/


sleep(v1) -> v1 만큼 쉽니다. 1000 -> 1초 100 -> 0.1초

rand(v1,v2) -> v1 최소 v2 최대의 값을 지정해주시면됩니다 rand(5,10) 일경우 5~10의 값이 반환

keydown(v1) -> 키코드 v1에 해당하는 키를 누른 효과를 얻습니다. 뗀 효과는 내지못합니다.

keyup(v1) -> 키코드 v1에 해당하는 키를 뗀 효과를 얻습니다. 누른 효과는 내지못합니다.

keypress(v1) -> 키코드 v1에 해당하는 키를 입력한 효과를 얻습니다. keydown+keyup

lastsysmessage() -> 제일 마지막으로 받은 메시지를 반환합니다.

search_pet(v1) -> 환수를 찾습니다.

pet_load(v1) -> 지정한 환수를 소환합니다.

pcname() -> 캐릭터의 네임을 반환합니다.

mapname() -> 현재있는 맵의 네임을 반환합니다.

canreach(v1) -> 타일을 체크합니다.

GetNextDirection(StartX, StartY, DestX, DestY)
   --- Return=Direction(0:UP, 1:RIGHT, 2:DOWN, 3:LEFT)
   5:목적지 도착
   -1 갈방법이 존재 X
   -5 맵로딩 X
   -4 목적지 값에 문제
	
   시작점의 XY, 목적지의 XY를 입력하면 어느 방향으로 이동해야 하는지 알려줍니다
   맵의 형태와 화면의 객체를 파악하여 길찾기를 수행하여 가장 빠른 경로를 안내합니다
   이동할 수 없는 경우 음수를 반환합니다.   

- 아래 함수로 특정 마법이 들어왔을때, 마법을 쓴다던지 하는걸 구현하시면 될겁니다.

function SystemMessageCallBack(msg)
end


add_timer_interval("function", delay, interval)
주기적인 타이머를 추가합니다.


add_timer("function", delay)
일회성 타이머를 추가합니다.
ex) add_timer("function", 500) -- 0.5초뒤 function 호출


add_command(command, function)
명령어 핸들러를 추가합니다.
ex)
function test(args)
   showtext("테스트 명령어가 실행되었습니다. 인자: "..args, 0)
end
add_command("테스트", "test")


delete_timer(timer_id)
타이머를 삭제합니다.


search_obj(name)
화면 내에 보이는 대상을 검색하여 건수를 반환합니다.


search_obj3(x,y)
화면 내, 특정 좌표에 있는 대상을 검색하여 건수를 반환합니다.
내 화면에서 벗어난 좌표는 인식되지 않습니다.


search_result(index)
최근에 검색한 결과를 가져옵니다.


obj_x(obj_id)
대상의 X좌표를 가져옵니다.


obj_y(obj_id)
대상의 Y좌표를 가져옵니다.


obj_dir(obj_id)
대상이 보고있는방향을 가져옵니다.


search_item(text)
내가 가진 아이템을 검색하여 슬롯번호을 반환합니다.


pickitem(type)
아이템을 줍습니다.
(type) 0:한개만 줍기(,) , 1:다줍기(SHIFT+,), 2:시체줍기(CTRL+,)


dropitem(slot, type)
아이템을 버립니다.
(type) 0:한개만 버리기 , 1:다버리기


useitem(slot, type)
아이템을 사용합니다.
(type) 0:한개만 버리기 , 1:다버리기


search_magic(name)
내가 배운 마법에서 특정 단어가 들어가는 마법의 슬롯번호를 반환합니다.


magic_cast(slot[, data])
해당 슬롯의 마법을 시전합니다.


pcstate()
접속한 캐릭터의 상태를 구해옵니다.
(반환값) 보통:0, 귀신:1, 투명:2, 뭔가를타고있음:3, 변신:4, 투명:5


obj_state(obj_id)
대상의 상태를 가져옵니다. 캐릭터인 경우에만 적용됩니다.
(반환값)
보통:0, 귀신:1, 투명:2, 뭔가를타고있음:3, 변신:4, 투명:5


magicdelay(name)
해당 마법의 딜레이를 구해옵니다.


magicduration(name)
해당 마법의 지속시간을 구해옵니다.


pchp()
접속한 캐릭터의 현재체력을 구해옵니다.


pcmp()
접속한 캐릭터의 현재마력을 구해옵니다.


pcgold()
접속한 캐릭터의 금전을 구해옵니다.


pcexp()
접속한 캐릭터의 경험치를 구해옵니다.


pclevel()
접속한 캐릭터의 레벨을 구해옵니다.


pcclass()
접속한 캐릭터의 직업번호를 구해옵니다.
(반환값) 0:평민, 1:전사, 2:도적, 3:주술사, 4:도사, 5:궁사


pcdir()
접속한 캐릭터의 방향을 반환합니다.
0:위 1:오 2:아 3:왼 


obj_click(obj_id)
대상을 클릭합니다.

